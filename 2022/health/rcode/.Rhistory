ACList$Administrative.Counties.2019 <- gsub("Dâ”œâ•‘n Laoghaire","Dun Laoghaire",ACList$Administrative.Counties.2019)
ACList$Administrative.Counties.2019 <- gsub("D├║n Laoghaire","Dun Laoghaire", ACList$Administrative.Counties.2019)
ACList$Administrative.Counties.2019 <- gsub("'","", ACList$Administrative.Counties.2019)
ACList$Administrative.Counties.2019 <- gsub("&","and", ACList$Administrative.Counties.2019)
#Lookup table from ED to AC and replacing of special chars
EDACLookup <- as.data.frame(read.csv(paste0(InputFilesLoc,"/EDACLookupFinal.csv")))%>%select(ED_GUID,AC)
EDACLookup$AC <- gsub("Dâ”œâ•‘n Laoghaire","Dun Laoghaire", EDACLookup$AC)
EDACLookup$AC <- gsub("D├║n Laoghaire","Dun Laoghaire", EDACLookup$AC)
EDACLookup$AC <- gsub("'","", EDACLookup$AC)
EDACLookup$AC <- gsub("&","and", EDACLookup$AC)
# Create combined dataframe of EDs GUIDs and ACs
# also creates lower case names of EDs and ACs with dashes instead of spaces so they can be used for filenames
EDWGUIDAC <- merge(EDWGUID,EDACLookup, by.x = "GUID", by.y = "ED_GUID")
EDWGUIDAC$EDLC <- make.names(tolower(EDWGUIDAC$ED))
EDWGUIDAC$EDLC <- gsub(".","-",EDWGUIDAC$EDLC, fixed = T)
EDWGUIDAC$ACLC <- make.names(tolower(EDWGUIDAC$AC))
EDWGUIDAC$ACLC <- gsub(".","-",EDWGUIDAC$ACLC, fixed = T)
EDWGUIDAC$GUIDLC <- tolower(EDWGUIDAC$GUID)
#Create CSV For HTML Table and EDsearch tool with links to each file
CSVForHTML <- EDWGUIDAC%>%select(ED,GUID,AC,EDLC,ACLC,GUIDLC)
CSVForHTML$ReportNumber <- 1:nrow(CSVForHTML)
#add links for html and pdf reports
CSVForHTML$Report <- paste0("<a href=\".\\reports\\html\\",CSVForHTML$ReportNumber,"--csohealthprofile--edname--",CSVForHTML$EDLC,"--acname--",CSVForHTML$ACLC,"--edguid--",CSVForHTML$GUIDLC,".html","\"", " target=\"_blank\"", ">","HTML","</a>", "  ",
"<a href=\".\\reports\\pdf\\",CSVForHTML$ReportNumber,"--csohealthprofile--edname--",CSVForHTML$EDLC,"--acname--",CSVForHTML$ACLC,"--edguid--",CSVForHTML$GUIDLC,".pdf","\"", " target=\"_blank\"", ">","PDF","</a>"  )
CSVForHTML <- CSVForHTML%>%select(ED,AC,Report, GUID)
write.csv(CSVForHTML, file = paste0(OutputFilesLoc, "/CSVForHTML.csv"), row.names = F)
# #sample dataset if running tests
# Sample <- sample(1:nrow(EDWGUIDAC),2)
# EDWGUIDAC <- EDWGUIDAC[Sample,]
# Read and Format PX Stat Files
source(paste0(getwd(),"/scripts/1_ReadAndFormatPXStat.R"))
# calculate SAPS Percentages
source(paste0(getwd(),"/scripts/2_SAPSPercentages.R"))
# create an empty list for errors, to be filled later
ErrorList <- list()
str(MissingPDFFiles)
UnionMissingFiles <- union(MissingHTMLFiles, MissingPDFFiles)
UnionMissingFiles
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
ED
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
i<-190
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
ED
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
AC
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
i <- 1
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
UnionMissingFiles
setwd(RootWD)
i <- 1187
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
ED
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
AC
i <- 1563
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
ED
i <- 3039
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
ED
i <- 3419
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
ED
EDWGUIDACMissing <- EDWGUIDAC[UnionMissingFiles,]
View(EDWGUIDACMissing)
i <- 30
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
ED
i <- 114
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
ED
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
ED
#render R Markdown
rmarkdown::render("HealthProfileMarkdown.Rmd", output_file =paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".html"))
#EDProfile pdf Link for RMD
EDLinkPDF<- paste0("<font size=\"5\"><a href=\"..\\pdf\\",i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".pdf\""," style=\"text-decoration: none\">A more detailed and print friendly pdf profile - with accompanying tables - is available here.</a></font>")
#render R Markdown
rmarkdown::render("HealthProfileMarkdown.Rmd", output_file =paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".html"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
#Compile the .rnw with Latex
tools::texi2pdf(paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
i <- 114
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"-",EDLC,"--acname--",ACLC,"--edguid--.tex"))
#Compile the .rnw with Latex
tools::texi2pdf(paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--",EDGUIDLC,".tex"))
setwd(RootWD)
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"-",EDLC,"--acname--",ACLC,"--edguid--.tex"))
tools::texi2pdf(paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--.tex"))
tools::texi2pdf(paste0(i,"--csohealthprofile--edname--",EDLC,"--acname--",ACLC,"--edguid--.tex"))
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--edname--",EDLC,"--acname--",ACLC,"--edguid--.tex"))
tools::texi2pdf(paste0(i,"--edname--",EDLC,"--acname--",ACLC,"--edguid--.tex"))
tools::texi2pdf(paste0(i,"--edname--",EDLC,"--acname--",ACLC,"--edguid--.tex"))
for (i in UnionMissingFiles)  {
setwd(RootWD)
#skip to next controls whether an iteration should be skipped if there is an error(if SkipToNext == TRUE)
SkipToNext <- FALSE
tryCatch({
#Select the appropriate, ED, AC and map link
ED <- as.character(EDWGUIDAC$ED[i])
EDGUID <- as.character(EDWGUIDAC$GUID[i])
EDGUIDLC <- as.character(EDWGUIDAC$GUIDLC[i])
EDLC <- as.character(EDWGUIDAC$EDLC[i])
AC <- EDWGUIDAC$AC[i]
ACGUID <- ACList$GUID[ACList$Administrative.Counties.2019 == AC]
ACLC <- as.character(EDWGUIDAC$ACLC[i])
#Create a truncated version of ED so that tables and plots remain consistent
EDForTables <- str_trunc(ED, 25)
EDForTables <- str_replace_all(EDForTables, "[^[:alnum:]]\\,", " ")
EDName <- make.names(ED)
EDName <- gsub("\\.","-", EDName)
#Create a truncated version of AC so that tables and plots remain consistent
ACForTables <- str_trunc(AC, 25)
ACForTables <- str_replace_all(ACForTables, "[^[:alnum:]]\\,", " ")
ACForTablesShort <- str_trunc(AC, 15)
ACForTablesShort <- str_replace_all(ACForTablesShort , "[^[:alnum:]]\\,", " ")
ACName <- make.names(AC)
ACName <-  gsub("\\.","-", ACName)
# Title for the markdown/html
TitleForRMD <- paste0("Electoral Division Health Profile - ", ED)
# link to map for ED
EDMapLink <- paste0("../inputs/exportededmaps/",EDGUID,".jpg")
# Run through Subfiles
source(paste0(getwd(),"/scripts/3_Population.R"))
source(paste0(getwd(),"/scripts/4_Carers.R"))
source(paste0(getwd(),"/scripts/5_GeneralHealth.R"))
source(paste0(getwd(),"/scripts/6_Disability.R"))
source(paste0(getwd(),"/scripts/7_Smoking.R"))
source(paste0(getwd(),"/scripts/8_Education.R"))
source(paste0(getwd(),"/scripts/9_PrincipleEconomicStatus.R"))
source(paste0(getwd(),"/scripts/10_Families.R"))
source(paste0(getwd(),"/scripts/11_Birthplace.R"))
source(paste0(getwd(),"/scripts/12_Volunteering.R"))
source(paste0(getwd(),"/scripts/13_SocialClass.R"))
source(paste0(getwd(),"/scripts/14_Households.R"))
source(paste0(getwd(),"/scripts/15_RenewableEnergy.R"))
source(paste0(getwd(),"/scripts/16_Travel.R"))
source(paste0(getwd(),"/scripts/17_KeyPointsAndOtherCalcs.R"))
source(paste0(getwd(),"/scripts/18_SAPS.R"))
setwd(paste0(getwd(),"/scripts"))
#Create the .RNW file using sweave for compiling
Sweave("HealthProfileTemplate.Rnw",output=paste0(i,"--",EDLC,"--ac--",ACLC,".tex"))
#Compile the .rnw with Latex
tools::texi2pdf(paste0(i,"--",EDLC,"--ac--",ACLC,".tex"))
tools::texi2pdf(paste0(i,"--",EDLC,"--ac--",ACLC,".tex"))
#EDProfile pdf Link for RMD
EDLinkPDF<- paste0("<font size=\"5\"><a href=\"..\\pdf\\",i,"--",EDLC,"--ac--",ACLC,".pdf\""," style=\"text-decoration: none\">A more detailed and print friendly pdf profile - with accompanying tables - is available here.</a></font>")
#render R Markdown
rmarkdown::render("HealthProfileMarkdown.Rmd", output_file =paste0(i,"--",EDLC,"--ac--",ACLC,".html"))
# print progress
print(paste0("Iteration ", i, " of ", nrow(EDWGUIDAC), " complete(",round(i*100/nrow(EDWGUIDAC),1),"%)"))
# log errors
}, error = function(e) {
ErrorMessage <- paste0("Error in Iteration _", i ,"_: for ED -",ED,"- ", conditionMessage(e))
ErrorList <<- c(ErrorList,ErrorMessage)
SkipToNext <<-TRUE
}
)
#if SkipToNext is TRUE, skip to next iteration
if(SkipToNext) { next }
}
warnings()
#write a csv of errors
write.csv(as.data.frame(ErrorList), file = paste0(OutputFilesLoc,"/ErrorList.csv"))
#setWD so if rerunning runs correctly
setwd(RootWD)
##List files
FileList <- as.data.frame(list.files(paste0(RootWD,"/scripts")))
#List HTML only
FileListHTML <- as.data.frame(FileList[grep("html", FileList$`list.files(paste0(RootWD, "/scripts"))`),])
colnames(FileListHTML) <- "FileName"
#Extract file numbers from filenames
FileNumberList <- as.numeric(sub("--.*","",FileListHTML$FileName))
#compare numbers completed with entire set that should be completed to identify failed runs
FullSequence <- seq(1, 3420)
MissingHTMLFiles <- setdiff(FullSequence, FileNumberList)
# Do the same for PDFs
FileListPDF <- as.data.frame(FileList[grep("pdf", FileList$`list.files(paste0(RootWD, "/scripts"))`),])
colnames(FileListPDF) <- "FileName"
FileNumberListPDF <- as.numeric(sub("--.*","",FileListPDF$FileName))
MissingPDFFiles <- setdiff(FullSequence, FileNumberListPDF)
UnionMissingFiles <- union(MissingHTMLFiles, MissingPDFFiles)
str(MissingPDFFiles)
EDWGUIDACMissing <- EDWGUIDAC[UnionMissingFiles,]
EDWGUIDACMissing
